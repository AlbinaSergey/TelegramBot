#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Demo script for HelpDesk cartridge request system
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã –∑–∞—è–≤–æ–∫ –Ω–∞ –∫–∞—Ä—Ç—Ä–∏–¥–∂–∏
"""

from db_utils import HelpDeskDB

def demo_cartridge_system():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã –∑–∞—è–≤–æ–∫ –Ω–∞ –∫–∞—Ä—Ç—Ä–∏–¥–∂–∏"""
    
    db = HelpDeskDB()
    
    print("=" * 60)
    print("üñ®Ô∏è  –°–ò–°–¢–ï–ú–ê –ó–ê–Ø–í–û–ö –ù–ê –ö–ê–†–¢–†–ò–î–ñ–ò - –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø")
    print("=" * 60)
    
    # 1. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–∏–ª–∏–∞–ª–æ–≤
    print("\nüè¢ –§–ò–õ–ò–ê–õ–´ –ò –û–¢–î–ï–õ–ï–ù–ò–Ø –•–ú–ê–û:")
    branches = db.get_branches()
    
    # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ —Ç–∏–ø–∞–º
    main_branches = [b for b in branches if b['code'].startswith('F-')]
    departments = [b for b in branches if b['code'].startswith('OTD-')]
    administration = [b for b in branches if b['code'].startswith('–ê–£-')]
    
    print(f"\nüìç –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∏–ª–∏–∞–ª—ã ({len(main_branches)}):")
    for branch in main_branches[:5]:  # –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5
        print(f"   ‚Ä¢ {branch['code']}: {branch['name']} ({branch['city']})")
    if len(main_branches) > 5:
        print(f"   ... –∏ –µ—â–µ {len(main_branches) - 5} —Ñ–∏–ª–∏–∞–ª–æ–≤")
    
    print(f"\nüè¨ –¢–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∞–ª—å–Ω—ã–µ –æ—Ç–¥–µ–ª–µ–Ω–∏—è ({len(departments)}):")
    for dept in departments[:5]:
        print(f"   ‚Ä¢ {dept['code']}: {dept['name']} ({dept['city']})")
    if len(departments) > 5:
        print(f"   ... –∏ –µ—â–µ {len(departments) - 5} –æ—Ç–¥–µ–ª–µ–Ω–∏–π")
    
    print(f"\nüèõÔ∏è –ê–ø–ø–∞—Ä–∞—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è ({len(administration)}):")
    for admin in administration:
        print(f"   ‚Ä¢ {admin['code']}: {admin['name']}")
    
    # 2. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–∞—Ä—Ç—Ä–∏–¥–∂–∏
    print("\nüñ®Ô∏è –î–û–°–¢–£–ü–ù–´–ï –ö–ê–†–¢–†–ò–î–ñ–ò:")
    cartridges = db.get_cartridge_types()
    for cart in cartridges:
        print(f"   ‚Ä¢ {cart['sku']}: {cart['name']}")
    
    # 3. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Å—Ç–∞—Ç–∫–∏ –Ω–∞ —Å–∫–ª–∞–¥–µ –¥–ª—è –æ–¥–Ω–æ–≥–æ –∏–∑ —Ñ–∏–ª–∏–∞–ª–æ–≤
    print(f"\nüì¶ –û–°–¢–ê–¢–ö–ò –ù–ê –°–ö–õ–ê–î–ï ({main_branches[0]['name']}):")
    stock = db.get_stock_by_branch(main_branches[0]['id'])
    for item in stock:
        status = "‚úÖ –í –Ω–∞–ª–∏—á–∏–∏" if item['quantity'] > 10 else "‚ö†Ô∏è –ú–∞–ª–æ" if item['quantity'] > 0 else "‚ùå –ù–µ—Ç"
        print(f"   ‚Ä¢ {item['sku']}: {item['quantity']} —à—Ç. {status}")
    
    # 4. –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∑–∞—è–≤–∫—É
    print("\nüìù –°–û–ó–î–ê–ù–ò–ï –ù–û–í–û–ô –ó–ê–Ø–í–ö–ò:")
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ñ–∏–ª–∏–∞–ª–∞
    user = db.get_user_by_telegram_id(300000001)  # branch_surgut
    if user:
        # –°–æ–∑–¥–∞–µ–º –∑–∞—è–≤–∫—É
        request_code = db.create_request(
            branch_id=main_branches[0]['id'],
            user_id=user['id'],
            priority='normal',
            comment='–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –∫–∞—Ä—Ç—Ä–∏–¥–∂–∏ –¥–ª—è –æ—Ñ–∏—Å–Ω–æ–π —Ç–µ—Ö–Ω–∏–∫–∏'
        )
        
        print(f"   ‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∑–∞—è–≤–∫–∞: {request_code}")
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–∑–∏—Ü–∏–∏ –≤ –∑–∞—è–≤–∫—É
        db.add_request_item(request_code, cartridges[0]['id'], 3)  # 3 —à—Ç –ø–µ—Ä–≤–æ–≥–æ –∫–∞—Ä—Ç—Ä–∏–¥–∂–∞
        db.add_request_item(request_code, cartridges[1]['id'], 2)  # 2 —à—Ç –≤—Ç–æ—Ä–æ–≥–æ –∫–∞—Ä—Ç—Ä–∏–¥–∂–∞
        
        print(f"   üì¶ –î–æ–±–∞–≤–ª–µ–Ω—ã –ø–æ–∑–∏—Ü–∏–∏:")
        print(f"      - {cartridges[0]['sku']}: 3 —à—Ç.")
        print(f"      - {cartridges[1]['sku']}: 2 —à—Ç.")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª–∏ –∑–∞—è–≤–∫–∏
        request_details = db.get_request_by_code(request_code)
        items = db.get_request_items(request_code)
        
        print(f"\nüìã –î–ï–¢–ê–õ–ò –ó–ê–Ø–í–ö–ò {request_code}:")
        print(f"   ‚Ä¢ –§–∏–ª–∏–∞–ª: {request_details['branch_name']}")
        print(f"   ‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {request_details['user_name']}")
        print(f"   ‚Ä¢ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: {request_details['priority']}")
        print(f"   ‚Ä¢ –°—Ç–∞—Ç—É—Å: {request_details['status']}")
        print(f"   ‚Ä¢ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {request_details['comment']}")
        print(f"   ‚Ä¢ –°–æ–∑–¥–∞–Ω–∞: {request_details['created_at']}")
        
        print(f"\n   üì¶ –ü–æ–∑–∏—Ü–∏–∏ –∑–∞—è–≤–∫–∏:")
        for item in items:
            print(f"      - {item['sku']}: {item['quantity']} —à—Ç. ({item['cartridge_name']})")
    
    # 5. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞—è–≤–∫–∏ –ø–æ —Ñ–∏–ª–∏–∞–ª—É
    print(f"\nüìä –ó–ê–Ø–í–ö–ò –ü–û –§–ò–õ–ò–ê–õ–£ ({main_branches[0]['name']}):")
    branch_requests = db.get_requests_by_branch(main_branches[0]['id'])
    
    for req in branch_requests[-5:]:  # –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 –∑–∞—è–≤–æ–∫
        status_icon = {
            'new': 'üÜï',
            'in_progress': '‚è≥',
            'done': '‚úÖ',
            'cancelled': '‚ùå',
            'archived': 'üìÅ'
        }.get(req['status'], '‚ùì')
        
        priority_icon = {
            'low': 'üü¢',
            'normal': 'üü°', 
            'high': 'üî¥'
        }.get(req['priority'], '‚ö™')
        
        print(f"   {status_icon} {req['request_code']} | {priority_icon} {req['priority']} | {req['username']} | {req['total_items'] or 0} –ø–æ–∑.")
    
    # 6. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    print("\nüìà –û–ë–©–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê –°–ò–°–¢–ï–ú–´:")
    stats = db.get_stats()
    
    print(f"   ‚Ä¢ –í—Å–µ–≥–æ –∑–∞—è–≤–æ–∫: {stats['total_requests']}")
    print(f"   ‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {stats['active_users']}")
    print(f"   ‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö —Ñ–∏–ª–∏–∞–ª–æ–≤: {stats['active_branches']}")
    
    print(f"\n   üìä –ü–æ —Å—Ç–∞—Ç—É—Å–∞–º:")
    for status, count in stats['by_status'].items():
        icon = {
            'new': 'üÜï',
            'in_progress': '‚è≥', 
            'done': '‚úÖ',
            'cancelled': '‚ùå',
            'archived': 'üìÅ'
        }.get(status, '‚ùì')
        print(f"      {icon} {status}: {count}")
    
    print(f"\n   üéØ –ü–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞–º:")
    for priority, count in stats['by_priority'].items():
        icon = {
            'low': 'üü¢',
            'normal': 'üü°',
            'high': 'üî¥'
        }.get(priority, '‚ö™')
        print(f"      {icon} {priority}: {count}")
    
    # 7. –ü—Ä–æ–≤–µ—Ä—è–µ–º SLA –Ω–∞—Ä—É—à–µ–Ω–∏—è
    sla_violations = db.get_sla_violations(1)  # –∑–∞—è–≤–∫–∏ —Å—Ç–∞—Ä—à–µ 1 —á–∞—Å–∞
    if sla_violations:
        print(f"\n‚ö†Ô∏è SLA –ù–ê–†–£–®–ï–ù–ò–Ø ({len(sla_violations)}):")
        for violation in sla_violations:
            print(f"   üö® {violation['request_code']} - {violation['branch_name']} (—Å–æ–∑–¥–∞–Ω–∞: {violation['created_at']})")
    else:
        print("\n‚úÖ SLA –ù–ê–†–£–®–ï–ù–ò–ô –ù–ï–¢")
    
    print("\n" + "=" * 60)
    print("üéâ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê")
    print("=" * 60)

if __name__ == "__main__":
    demo_cartridge_system()