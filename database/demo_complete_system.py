#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Complete system demo for HelpDesk with real HMAO data
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∑–∞—è–≤–æ–∫ –Ω–∞ –∫–∞—Ä—Ç—Ä–∏–¥–∂–∏ —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –•–ú–ê–û
"""

import sqlite3
from datetime import datetime

def demo_complete_system():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –•–ú–ê–û"""
    
    conn = sqlite3.connect('database/helpdesk_complete.db')
    conn.row_factory = sqlite3.Row
    cursor = conn.cursor()
    
    print("=" * 80)
    print("üè• –°–ò–°–¢–ï–ú–ê –ó–ê–Ø–í–û–ö –ù–ê –ö–ê–†–¢–†–ò–î–ñ–ò - –ë–£ '–•–ê–ù–¢–´-–ú–ê–ù–°–ò–ô–°–ö–û–ï –ë–°–ú –≠'")
    print("=" * 80)
    
    # 1. –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
    print("\nüìã –°–¢–†–£–ö–¢–£–†–ê –û–†–ì–ê–ù–ò–ó–ê–¶–ò–ò:")
    print("-" * 50)
    
    # –ó–æ–Ω–∞–ª—å–Ω—ã–µ –æ—Ç–¥–µ–ª—ã
    cursor.execute("""
        SELECT name, city, manager_name, phone, email 
        FROM branches WHERE type='zone' ORDER BY name
    """)
    zones = cursor.fetchall()
    
    print("üåç –ó–û–ù–ê–õ–¨–ù–´–ï –û–¢–î–ï–õ–´:")
    for zone in zones:
        print(f"   ‚Ä¢ {zone['name']}")
        print(f"     üìç {zone['city']}")
        print(f"     üë§ {zone['manager_name']}")
        print(f"     üìû {zone['phone']}")
        print(f"     ‚úâÔ∏è  {zone['email']}")
        print()
    
    # –§–∏–ª–∏–∞–ª—ã –ø–æ –∑–æ–Ω–∞–º
    cursor.execute("""
        SELECT z.name as zone_name, COUNT(b.id) as branches_count
        FROM branches z
        LEFT JOIN branches b ON b.parent_branch_id = z.id AND b.type = 'branch'
        WHERE z.type = 'zone'
        GROUP BY z.id, z.name
        ORDER BY z.name
    """)
    zone_stats = cursor.fetchall()
    
    print("üìä –§–ò–õ–ò–ê–õ–´ –ü–û –ó–û–ù–ê–ú:")
    for stat in zone_stats:
        print(f"   ‚Ä¢ {stat['zone_name']}: {stat['branches_count']} —Ñ–∏–ª–∏–∞–ª–æ–≤")
    
    # –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –æ—Ç–¥–µ–ª–µ–Ω–∏—è
    cursor.execute("""
        SELECT name, manager_name, city, phone 
        FROM branches WHERE type='department' ORDER BY city, name
    """)
    departments = cursor.fetchall()
    
    print(f"\nüè• –°–ü–ï–¶–ò–ê–õ–ò–ó–ò–†–û–í–ê–ù–ù–´–ï –û–¢–î–ï–õ–ï–ù–ò–Ø ({len(departments)}):")
    current_city = ""
    for dept in departments:
        if dept['city'] != current_city:
            current_city = dept['city']
            print(f"\n   üìç {current_city}:")
        
        dept_name = dept['name']
        if len(dept_name) > 60:
            dept_name = dept_name[:57] + "..."
        
        print(f"      ‚Ä¢ {dept_name}")
        print(f"        üë§ {dept['manager_name']}")
        print(f"        üìû {dept['phone']}")
    
    # 2. –ö–∞—Ä—Ç—Ä–∏–¥–∂–∏ –∏ —Å–∫–ª–∞–¥
    print(f"\n\nüñ®Ô∏è  –£–ü–†–ê–í–õ–ï–ù–ò–ï –ö–ê–†–¢–†–ò–î–ñ–ê–ú–ò:")
    print("-" * 50)
    
    cursor.execute("""
        SELECT sku, name, vendor, 
               COUNT(si.id) as locations_count,
               SUM(si.quantity) as total_quantity
        FROM cartridge_types ct
        LEFT JOIN stock_items si ON ct.id = si.cartridge_type_id
        GROUP BY ct.id, ct.sku, ct.name, ct.vendor
        ORDER BY ct.vendor, ct.sku
    """)
    cartridges = cursor.fetchall()
    
    print("üì¶ –î–û–°–¢–£–ü–ù–´–ï –ö–ê–†–¢–†–ò–î–ñ–ò:")
    current_vendor = ""
    for cart in cartridges:
        if cart['vendor'] != current_vendor:
            current_vendor = cart['vendor']
            print(f"\n   üè∑Ô∏è {current_vendor}:")
        
        print(f"      ‚Ä¢ {cart['sku']}: {cart['name'][:50]}...")
        print(f"        üìç –î–æ—Å—Ç—É–ø–Ω–æ –≤ {cart['locations_count']} —Ç–æ—á–∫–∞—Ö")
        print(f"        üì¶ –û–±—â–∏–π –æ—Å—Ç–∞—Ç–æ–∫: {cart['total_quantity']} —à—Ç.")
    
    # –¢–æ–ø-5 —Ñ–∏–ª–∏–∞–ª–æ–≤ –ø–æ –æ—Å—Ç–∞—Ç–∫–∞–º
    cursor.execute("""
        SELECT b.name, b.city, SUM(si.quantity) as total_stock
        FROM branches b
        JOIN stock_items si ON b.id = si.branch_id
        WHERE b.type IN ('branch', 'zone')
        GROUP BY b.id, b.name, b.city
        ORDER BY total_stock DESC
        LIMIT 5
    """)
    top_branches = cursor.fetchall()
    
    print(f"\nüìà –¢–û–ü-5 –§–ò–õ–ò–ê–õ–û–í –ü–û –û–°–¢–ê–¢–ö–ê–ú:")
    for i, branch in enumerate(top_branches, 1):
        print(f"   {i}. {branch['name']} ({branch['city']})")
        print(f"      üì¶ –û–±—â–∏–π –æ—Å—Ç–∞—Ç–æ–∫: {branch['total_stock']} –∫–∞—Ä—Ç—Ä–∏–¥–∂–µ–π")
    
    # 3. –ó–∞—è–≤–∫–∏ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
    print(f"\n\nüìã –°–ò–°–¢–ï–ú–ê –ó–ê–Ø–í–û–ö:")
    print("-" * 50)
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    cursor.execute("""
        SELECT role, COUNT(*) as count
        FROM users
        GROUP BY role
        ORDER BY count DESC
    """)
    user_stats = cursor.fetchall()
    
    print("üë• –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ò –°–ò–°–¢–ï–ú–´:")
    role_names = {
        'admin': '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã',
        'executor': '–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–∏',
        'branch_user': '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Ñ–∏–ª–∏–∞–ª–æ–≤'
    }
    
    for stat in user_stats:
        role_name = role_names.get(stat['role'], stat['role'])
        print(f"   ‚Ä¢ {role_name}: {stat['count']} —á–µ–ª.")
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞—è–≤–æ–∫
    cursor.execute("""
        SELECT status, priority, COUNT(*) as count
        FROM requests
        GROUP BY status, priority
        ORDER BY status, priority
    """)
    request_stats = cursor.fetchall()
    
    print(f"\nüìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ó–ê–Ø–í–û–ö:")
    if request_stats:
        current_status = ""
        for stat in request_stats:
            if stat['status'] != current_status:
                current_status = stat['status']
                status_names = {
                    'new': '–ù–æ–≤—ã–µ',
                    'in_progress': '–í —Ä–∞–±–æ—Ç–µ', 
                    'approved': '–û–¥–æ–±—Ä–µ–Ω–Ω—ã–µ',
                    'delivered': '–î–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ',
                    'done': '–í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ'
                }
                print(f"   üìå {status_names.get(current_status, current_status)}:")
            
            priority_names = {
                'low': '–ù–∏–∑–∫–∏–π',
                'normal': '–û–±—ã—á–Ω—ã–π',
                'high': '–í—ã—Å–æ–∫–∏–π',
                'urgent': '–°—Ä–æ—á–Ω—ã–π'
            }
            priority_name = priority_names.get(stat['priority'], stat['priority'])
            print(f"      ‚Ä¢ {priority_name} –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç: {stat['count']} –∑–∞—è–≤–æ–∫")
    else:
        print("   üìù –ó–∞—è–≤–∫–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç")
    
    # –î–µ—Ç–∞–ª–∏ –∑–∞—è–≤–æ–∫
    cursor.execute("""
        SELECT r.request_code, r.status, r.priority, r.comment,
               b.name as branch_name, b.city,
               u.full_name as user_name,
               r.created_at,
               GROUP_CONCAT(ct.sku || ' x' || ri.quantity, ', ') as items
        FROM requests r
        JOIN branches b ON r.branch_id = b.id
        JOIN users u ON r.user_id = u.id
        LEFT JOIN request_items ri ON r.id = ri.request_id
        LEFT JOIN cartridge_types ct ON ri.cartridge_type_id = ct.id
        GROUP BY r.id
        ORDER BY r.created_at DESC
        LIMIT 5
    """)
    recent_requests = cursor.fetchall()
    
    if recent_requests:
        print(f"\nüìã –ü–û–°–õ–ï–î–ù–ò–ï –ó–ê–Ø–í–ö–ò:")
        for req in recent_requests:
            status_emoji = {
                'new': 'üÜï',
                'in_progress': '‚è≥',
                'approved': '‚úÖ',
                'delivered': 'üöö',
                'done': '‚úÖ'
            }
            
            priority_emoji = {
                'low': 'üü¢',
                'normal': 'üü°',
                'high': 'üü†',
                'urgent': 'üî¥'
            }
            
            print(f"\n   {status_emoji.get(req['status'], 'üìã')} {req['request_code']}")
            print(f"      üìç {req['branch_name']} ({req['city']})")
            print(f"      üë§ {req['user_name']}")
            print(f"      {priority_emoji.get(req['priority'], '‚ö™')} –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: {req['priority']}")
            if req['items']:
                print(f"      üì¶ –¢–æ–≤–∞—Ä—ã: {req['items']}")
            print(f"      üí¨ {req['comment'][:50]}...")
            print(f"      üìÖ {req['created_at']}")
    
    # 4. –°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    print(f"\n\n‚öôÔ∏è  –°–ò–°–¢–ï–ú–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø:")
    print("-" * 50)
    
    # –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    cursor.execute("SELECT COUNT(*) FROM branches")
    total_branches = cursor.fetchone()[0]
    
    cursor.execute("SELECT COUNT(*) FROM cartridge_types")
    total_cartridges = cursor.fetchone()[0]
    
    cursor.execute("SELECT COUNT(*) FROM users")
    total_users = cursor.fetchone()[0]
    
    cursor.execute("SELECT COUNT(*) FROM requests")
    total_requests = cursor.fetchone()[0]
    
    cursor.execute("SELECT SUM(quantity) FROM stock_items")
    total_stock = cursor.fetchone()[0] or 0
    
    print(f"üìä –û–ë–©–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
    print(f"   ‚Ä¢ –í—Å–µ–≥–æ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–π: {total_branches}")
    print(f"   ‚Ä¢ –¢–∏–ø–æ–≤ –∫–∞—Ä—Ç—Ä–∏–¥–∂–µ–π: {total_cartridges}")  
    print(f"   ‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {total_users}")
    print(f"   ‚Ä¢ –ó–∞—è–≤–æ–∫: {total_requests}")
    print(f"   ‚Ä¢ –ö–∞—Ä—Ç—Ä–∏–¥–∂–µ–π –Ω–∞ —Å–∫–ª–∞–¥–∞—Ö: {total_stock}")
    
    # –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
    cursor.execute("SELECT name FROM sqlite_master WHERE type='table'")
    tables = cursor.fetchall()
    
    print(f"\nüíæ –ë–ê–ó–ê –î–ê–ù–ù–´–•:")
    print(f"   ‚Ä¢ –¢–∞–±–ª–∏—Ü: {len(tables)}")
    print(f"   ‚Ä¢ –§–∞–π–ª: database/helpdesk_complete.db")
    print(f"   ‚Ä¢ –°—Ö–µ–º–∞: database/schema_extended.sql")
    
    print(f"\nüîß –î–û–°–¢–£–ü–ù–´–ï –û–ü–ï–†–ê–¶–ò–ò:")
    print(f"   ‚Ä¢ –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞—è–≤–æ–∫ —á–µ—Ä–µ–∑ Telegram –±–æ—Ç")
    print(f"   ‚Ä¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Å—Ç–∞—Ç–∫–∞–º–∏ –∫–∞—Ä—Ç—Ä–∏–¥–∂–µ–π")
    print(f"   ‚Ä¢ –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–æ–≤ –∑–∞—è–≤–æ–∫")
    print(f"   ‚Ä¢ SLA –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è")
    print(f"   ‚Ä¢ –ê—É–¥–∏—Ç –≤—Å–µ—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π")
    print(f"   ‚Ä¢ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å 1–°")
    
    print("\n" + "=" * 80)
    print("‚úÖ –°–ò–°–¢–ï–ú–ê –ì–û–¢–û–í–ê –ö –†–ê–ë–û–¢–ï!")
    print("üöÄ –ú–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å Telegram –±–æ—Ç –∏ –Ω–∞—á–∏–Ω–∞—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É –∑–∞—è–≤–æ–∫")
    print("=" * 80)
    
    conn.close()

if __name__ == "__main__":
    demo_complete_system()