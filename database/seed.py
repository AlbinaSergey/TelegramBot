#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Seed data script for HelpDesk system
–°–æ–∑–¥–∞–Ω–∏–µ –Ω–∞—á–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã
"""

import sqlite3
import hashlib
from datetime import datetime

def create_password_hash(password):
    """–°–æ–∑–¥–∞–Ω–∏–µ —Ö–µ—à–∞ –ø–∞—Ä–æ–ª—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    return hashlib.sha256(password.encode()).hexdigest()

def seed_database(db_path='database/helpdesk.db'):
    """–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –Ω–∞—á–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏"""
    
    conn = sqlite3.connect(db_path)
    cursor = conn.cursor()
    
    try:
        # –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ë–î –∏–∑ schema.sql
        with open('database/schema.sql', 'r', encoding='utf-8') as f:
            schema = f.read()
            cursor.executescript(schema)
        
        # –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ–∏–ª–∏–∞–ª–æ–≤
        branches_data = [
            ('F-KAZ', '–§–∏–ª–∏–∞–ª –ö–∞–∑–∞–Ω—å', '–ö–∞–∑–∞–Ω—å'),
            ('F-MSK', '–§–∏–ª–∏–∞–ª –ú–æ—Å–∫–≤–∞', '–ú–æ—Å–∫–≤–∞'),
            ('F-SPB', '–§–∏–ª–∏–∞–ª –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥', '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥'),
            ('–ì–û–†–û–î-12', '–û—Ç–¥–µ–ª–µ–Ω–∏–µ ‚Ññ12', '–ù–∏–∂–Ω–∏–π –ù–æ–≤–≥–æ—Ä–æ–¥'),
            ('–ì–û–†–û–î-45', '–û—Ç–¥–µ–ª–µ–Ω–∏–µ ‚Ññ45', '–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥'),
        ]
        
        cursor.executemany(
            "INSERT OR IGNORE INTO branches (code, name, city) VALUES (?, ?, ?)",
            branches_data
        )
        
        # –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç–∏–ø–æ–≤ –∫–∞—Ä—Ç—Ä–∏–¥–∂–µ–π
        cartridge_types_data = [
            ('HP-CF248A', 'HP 48A LaserJet Pro'),
            ('HP-CE285A', 'HP 85A LaserJet Pro'),
            ('CANON-728', 'Canon 728 MF4410/4430'),
            ('CANON-725', 'Canon 725 LBP6000/6020'),
            ('XEROX-3020', 'Xerox WorkCentre 3020'),
            ('BROTHER-TN2090', 'Brother TN-2090'),
            ('SAMSUNG-MLT-D111S', 'Samsung MLT-D111S'),
        ]
        
        cursor.executemany(
            "INSERT OR IGNORE INTO cartridge_types (sku, name) VALUES (?, ?)",
            cartridge_types_data
        )
        
        # –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        users_data = [
            (12345678, 'admin_user', 'admin', create_password_hash('admin123')),
            (87654321, 'executor1', 'executor', create_password_hash('exec123')),
            (11111111, 'branch_user1', 'branch_user', None),
            (22222222, 'branch_user2', 'branch_user', None),
            (33333333, 'executor2', 'executor', create_password_hash('exec456')),
        ]
        
        cursor.executemany(
            "INSERT OR IGNORE INTO users (telegram_id, username, role, password_hash) VALUES (?, ?, ?, ?)",
            users_data
        )
        
        # –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –æ—Å—Ç–∞—Ç–∫–æ–≤ –Ω–∞ —Å–∫–ª–∞–¥–µ (—Å–ª—É—á–∞–π–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ)
        import random
        
        # –ü–æ–ª—É—á–∞–µ–º ID —Ñ–∏–ª–∏–∞–ª–æ–≤ –∏ –∫–∞—Ä—Ç—Ä–∏–¥–∂–µ–π
        cursor.execute("SELECT id FROM branches")
        branch_ids = [row[0] for row in cursor.fetchall()]
        
        cursor.execute("SELECT id FROM cartridge_types")
        cartridge_ids = [row[0] for row in cursor.fetchall()]
        
        # –°–æ–∑–¥–∞–µ–º –æ—Å—Ç–∞—Ç–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ñ–∏–ª–∏–∞–ª–∞ –∏ —Ç–∏–ø–∞ –∫–∞—Ä—Ç—Ä–∏–¥–∂–∞
        stock_data = []
        for branch_id in branch_ids:
            for cartridge_id in cartridge_ids:
                quantity = random.randint(0, 50)  # —Å–ª—É—á–∞–π–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç 0 –¥–æ 50
                stock_data.append((branch_id, cartridge_id, quantity))
        
        cursor.executemany(
            "INSERT OR IGNORE INTO stock_items (branch_id, cartridge_type_id, quantity) VALUES (?, ?, ?)",
            stock_data
        )
        
        # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∑–∞—è–≤–æ–∫
        cursor.execute("SELECT id FROM users WHERE role = 'branch_user'")
        branch_user_ids = [row[0] for row in cursor.fetchall()]
        
        cursor.execute("SELECT id FROM users WHERE role = 'executor'")
        executor_ids = [row[0] for row in cursor.fetchall()]
        
        test_requests = [
            ('REQ-001', branch_ids[0], branch_user_ids[0], 'high', 'new', '–°—Ä–æ—á–Ω–æ –Ω—É–∂–Ω—ã –∫–∞—Ä—Ç—Ä–∏–¥–∂–∏ –¥–ª—è –ø—Ä–∏–Ω—Ç–µ—Ä–∞ –≤ –æ—Ñ–∏—Å–µ'),
            ('REQ-002', branch_ids[1], branch_user_ids[0], 'normal', 'in_progress', '–ó–∞–∫–∞–∑ –∫–∞—Ä—Ç—Ä–∏–¥–∂–µ–π –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é'),
            ('REQ-003', branch_ids[2], branch_user_ids[1] if len(branch_user_ids) > 1 else branch_user_ids[0], 'low', 'done', '–ü–ª–∞–Ω–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –∫–∞—Ä—Ç—Ä–∏–¥–∂–∏'),
        ]
        
        for i, req_data in enumerate(test_requests):
            cursor.execute(
                """INSERT OR IGNORE INTO requests 
                   (request_code, branch_id, user_id, priority, status, comment, assigned_executor_id) 
                   VALUES (?, ?, ?, ?, ?, ?, ?)""",
                (*req_data, executor_ids[0] if i < 2 else None)
            )
        
        # –≠–ª–µ–º–µ–Ω—Ç—ã –∑–∞—è–≤–æ–∫
        cursor.execute("SELECT id FROM requests")
        request_ids = [row[0] for row in cursor.fetchall()]
        
        request_items_data = [
            (request_ids[0], cartridge_ids[0], 2),  # 2 HP-CF248A
            (request_ids[0], cartridge_ids[2], 1),  # 1 CANON-728
            (request_ids[1], cartridge_ids[1], 3),  # 3 HP-CE285A
            (request_ids[2], cartridge_ids[4], 1),  # 1 XEROX-3020
        ]
        
        cursor.executemany(
            "INSERT OR IGNORE INTO request_items (request_id, cartridge_type_id, quantity) VALUES (?, ?, ?)",
            request_items_data
        )
        
        # –õ–æ–≥–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π
        logs_data = [
            (request_ids[0], branch_user_ids[0], 'created', None, 'new', '–ó–∞—è–≤–∫–∞ —Å–æ–∑–¥–∞–Ω–∞'),
            (request_ids[1], branch_user_ids[0], 'created', None, 'new', '–ó–∞—è–≤–∫–∞ —Å–æ–∑–¥–∞–Ω–∞'),
            (request_ids[1], executor_ids[0], 'status_changed', 'new', 'in_progress', '–ó–∞—è–≤–∫–∞ –≤–∑—è—Ç–∞ –≤ —Ä–∞–±–æ—Ç—É'),
            (request_ids[2], branch_user_ids[1] if len(branch_user_ids) > 1 else branch_user_ids[0], 'created', None, 'new', '–ó–∞—è–≤–∫–∞ —Å–æ–∑–¥–∞–Ω–∞'),
            (request_ids[2], executor_ids[0], 'status_changed', 'new', 'in_progress', '–ó–∞—è–≤–∫–∞ –≤–∑—è—Ç–∞ –≤ —Ä–∞–±–æ—Ç—É'),
            (request_ids[2], executor_ids[0], 'status_changed', 'in_progress', 'done', '–ó–∞—è–≤–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞'),
        ]
        
        cursor.executemany(
            """INSERT OR IGNORE INTO logs 
               (request_id, user_id, action, from_status, to_status, note) 
               VALUES (?, ?, ?, ?, ?, ?)""",
            logs_data
        )
        
        conn.commit()
        print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ –Ω–∞—á–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏!")
        print(f"üìä –°–æ–∑–¥–∞–Ω–æ:")
        print(f"   - –§–∏–ª–∏–∞–ª–æ–≤: {len(branches_data)}")
        print(f"   - –¢–∏–ø–æ–≤ –∫–∞—Ä—Ç—Ä–∏–¥–∂–µ–π: {len(cartridge_types_data)}")
        print(f"   - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(users_data)}")
        print(f"   - –û—Å—Ç–∞—Ç–∫–æ–≤ –Ω–∞ —Å–∫–ª–∞–¥–µ: {len(stock_data)}")
        print(f"   - –¢–µ—Å—Ç–æ–≤—ã—Ö –∑–∞—è–≤–æ–∫: {len(test_requests)}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ –ë–î: {e}")
        conn.rollback()
        
    finally:
        conn.close()

if __name__ == "__main__":
    seed_database()